name: Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version Tag'
        required: false
        default: '1.5.0-bundle'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ] # 'ubuntu-latest' "ubuntu-latest" "windows-latest"
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]

    runs-on: ${{ matrix.os }}

    name: ${{ github.event.inputs.tag }} python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Switch to Workspace
        run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}

      # install prerequisites
      - name: Preqrequisites ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -q -y curl software-properties-common build-essential
          # sudo apt install -y libgl1-mesa-dev libsoundio-dev libvulkan-dev libx11-dev libxcursor-dev libxinerama-dev libxrandr-dev libusb-1.0-0-dev libssl-dev libudev-dev mesa-common-dev uuid-dev
          
          # install libsoundio1
          sudo apt-add-repository -y -n 'deb http://archive.ubuntu.com/ubuntu focal main'
          sudo apt-add-repository -y 'deb http://archive.ubuntu.com/ubuntu focal universe'
          sudo apt-get install -y libsoundio1
          sudo apt-add-repository -r -y -n 'deb http://archive.ubuntu.com/ubuntu focal universe'
          sudo apt-add-repository -r -y 'deb http://archive.ubuntu.com/ubuntu focal main'
          
          # installing deb packages
          wget https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4a1.4-dev/libk4a1.4-dev_1.4.2_amd64.deb -O libk4a-dev.deb
          wget https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4a1.4/libk4a1.4_1.4.2_amd64.deb -O libk4a.deb
          
          sudo dpkg -i libk4a.deb
          sudo dpkg -i libk4a-dev.deb

      - name: Preqrequisites Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install wget --no-progress
          $ProgressPreference = 'SilentlyContinue'
          wget https://download.microsoft.com/download/d/c/1/dc1f8a76-1ef2-4a1a-ac89-a7e22b3da491/Azure%20Kinect%20SDK%201.4.2.exe -O sdk.exe
          echo "installing Azure Kinect SDK..."
          ./sdk.exe  /install /passive /norestart /log ${{ github.workspace }}/azurelog.txt
          Wait-Process -Name "sdk" -Timeout 360
          cat ${{ github.workspace }}/azurelog.txt

      # run build command
      - name: Build pyk4a
        run: |
          python -m pip install setuptools
          python -m pip install wheel
          python -m pip install -r numpy-versions.txt
          python setup.py bdist_wheel
          ls dist

      # fix many-linux
      - name: Preqrequisites ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          pip install auditwheel

          # get path of first wheel
          files=(dist/*)
          wheel_file="${files[0]}"

          # repaire wheel
          auditwheel repair $wheel_file --plat manylinux_2_28_x86_64 -w dist

          # remove original wheel
          rm $wheel_file
          
          # adjust repaired wheel with depthengine
          cd dist
          whlname=$(ls *.whl)
          wheel unpack $whlname
          whldir=$(ls -d pyk4a*/)
          mv "$whldir/pyk4a/libdepthengine.so.2.0" "$whldir/pyk4a_bundle.libs"
          find $whldir/pyk4a -name '*.so.*' -delete
          wheel pack $whldir
          cd ..

      # upload dist
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.whl
          tag: ${{ github.event.inputs.tag }}
          release_name: "Version ${{ github.event.inputs.tag }}"
          body: "Prebuilt pyk4a wheel packages version ${{ github.event.inputs.tag }}."
          overwrite: true
          file_glob: true
